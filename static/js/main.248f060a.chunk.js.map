{"version":3,"sources":["components/navbar/Navbar.js","components/taskitem/TaskItem.js","img/plus-icon.svg","components/tasklist/TaskList.js","App.js","index.js"],"names":["Navbar","className","TaskItem","id","title","taskState","onTaskUpdate","onDeleteTask","useState","isEditing","setIsEditing","EditableTile","setEditableTile","autoFocus","type","value","onChange","event","newTitle","target","onKeyPress","key","onKeyDown","onBlur","ref","input","nameInput","onClick","e","TaskList","onAddTask","tasks","map","task","state","length","src","plusIcon","alt","idAcc","App","setTastks","addTask","newTask","existingTasks","updateTask","deleteTask","filter","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.248f060a.chunk.js","sourcesContent":["import \"./navbar.css\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <span>React Kanban</span>\r\n    </nav>\r\n  );\r\n}\r\n","import \"./taskitem.css\";\r\n\r\nimport { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function TaskItem({\r\n  id,\r\n  title,\r\n  taskState,\r\n  onTaskUpdate,\r\n  onDeleteTask\r\n}) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [EditableTile, setEditableTile] = useState(title);\r\n\r\n  const onTitleChange = (event) => {\r\n    const newTitle = event.target.value;\r\n    setEditableTile(newTitle);\r\n  };\r\n\r\n  const onKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      if (event.target.value === \"\") {\r\n        onDeleteTask(id);\r\n      } else {\r\n        onTaskUpdate(id, EditableTile, taskState);\r\n      }\r\n\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  const onKeyDown = (event) => {\r\n    if (event.key === \"Escape\") {\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  const onBlur = (event) => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const onTaskStateChange = (event) => {\r\n    onTaskUpdate(id, title, event.target.value);\r\n  };\r\n\r\n  if (isEditing) {\r\n    return (\r\n      <div className=\"task-item\">\r\n        <label>\r\n          {id} - {title}\r\n        </label>\r\n        <br />\r\n        <label>alterar para:</label>\r\n        <br />\r\n\r\n        <input\r\n          id=\"edit-task\"\r\n          autoFocus\r\n          type=\"text\"\r\n          value={EditableTile}\r\n          onChange={onTitleChange}\r\n          onKeyPress={onKeyPress}\r\n          onKeyDown={onKeyDown}\r\n          onBlur={onBlur}\r\n          ref={(input) => {\r\n            this.nameInput = input;\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"task-item\">\r\n        <div\r\n          onClick={(e) => {\r\n            setIsEditing(true);\r\n          }}\r\n        >\r\n          {id} - {EditableTile}\r\n        </div>\r\n        <select onChange={onTaskStateChange} value={taskState}>\r\n          <option value=\"Pendente\">Pendente</option>\r\n          <option value=\"Fazendo\">Fazendo</option>\r\n          <option value=\"Completa\">Completa</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTaskItem.propTypes = {\r\n  id: PropTypes.number,\r\n  title: PropTypes.string.isRequired,\r\n  taskState: PropTypes.string.isRequired,\r\n  onTaskUpdate: PropTypes.func.isRequired,\r\n  onDeleteTask: PropTypes.func.isRequired\r\n};\r\n","export default __webpack_public_path__ + \"static/media/plus-icon.b030f6ae.svg\";","import \"./tasklist.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport TaskItem from \"../taskitem/TaskItem\";\r\n\r\nimport plusIcon from \"../../img/plus-icon.svg\";\r\n\r\nexport default function TaskList({\r\n  title,\r\n  taskState,\r\n  onAddTask,\r\n  tasks,\r\n  onTaskUpdate,\r\n  onDeleteTask\r\n}) {\r\n  const addTask = () => {\r\n    onAddTask(\"Nova Tarefa\", taskState);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasklist \">\r\n      <div className=\"title\">{title}</div>\r\n      <div className=\"content\">\r\n        {tasks.map((task) => {\r\n          return (\r\n            <TaskItem\r\n              key={\"it\" + task.id}\r\n              id={task.id}\r\n              title={task.title}\r\n              taskState={task.state}\r\n              onTaskUpdate={onTaskUpdate}\r\n              onDeleteTask={onDeleteTask}\r\n            />\r\n          );\r\n        })}\r\n        {tasks.length === 0 && <div className=\"empty-list\">Lista Vazia</div>}\r\n        <button onClick={addTask} className=\"btn\">\r\n          <img src={plusIcon} alt=\"plus\" />\r\n          Adicionar Tarefa\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTaskList.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  onAddTask: PropTypes.func.isRequired,\r\n  tasks: PropTypes.array.isRequired,\r\n  onTaskUpdate: PropTypes.func.isRequired,\r\n  onDeleteTask: PropTypes.func.isRequired\r\n};\r\n","import { useState } from \"react\";\nimport \"./styles.css\";\n\nimport Navbar from \"./components/navbar/Navbar\";\nimport TaskList from \"./components/tasklist/TaskList\";\n\nlet idAcc = 0;\n\nconst generateId = () => {\n  idAcc = idAcc + 1;\n  return idAcc;\n};\n\nexport default function App() {\n  const [tasks, setTastks] = useState([]);\n\n  const addTask = (title, state) => {\n    const newTask = {\n      id: generateId(),\n      title,\n      state\n    };\n\n    setTastks((existingTasks) => {\n      return [...existingTasks, newTask];\n    });\n  };\n\n  const updateTask = (id, title, state) => {\n    setTastks((existingTasks) => {\n      return existingTasks.map((task) => {\n        if (task.id === id) {\n          return { ...task, title, state };\n        } else {\n          return task;\n        }\n      }); //existingTasks.map\n    }); //setTastks\n  };\n\n  const deleteTask = (id) => {\n    setTastks((existingTasks) => {\n      return existingTasks.filter((task) => task.id !== id);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Xavier</h1>\n      <Navbar />\n      <div className=\"container\">\n        <TaskList\n          title=\"Pedente\"\n          taskState=\"Pendente\"\n          onAddTask={addTask}\n          tasks={tasks.filter((task) => task.state === \"Pendente\")}\n          onTaskUpdate={updateTask}\n          onDeleteTask={deleteTask}\n        />\n        <TaskList\n          title=\"Fazendo\"\n          taskState=\"Fazendo\"\n          onAddTask={addTask}\n          tasks={tasks.filter((task) => task.state === \"Fazendo\")}\n          onTaskUpdate={updateTask}\n          onDeleteTask={deleteTask}\n        />\n        <TaskList\n          title=\"Completa\"\n          taskState=\"Completa\"\n          onAddTask={addTask}\n          tasks={tasks.filter((task) => task.state === \"Completa\")}\n          onTaskUpdate={updateTask}\n          onDeleteTask={deleteTask}\n        />\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}